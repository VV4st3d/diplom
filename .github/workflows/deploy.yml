name: Deploy Web Dev Platform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # Тестирование приложения
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    services:
      # Сервис MongoDB для тестирования
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Настройка Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      # Тестирование бэкенда
      - name: Install backend dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Run backend tests
        working-directory: ./server
        run: npm test
        env:
          JWT_SECRET: test_secret
          MONGODB_URI: mongodb://localhost:27017/test
      
      # Тестирование фронтенда
      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci
      
      - name: Run frontend tests
        working-directory: ./client
        run: npm test
  
  # Сборка и деплой на Heroku
  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Настройка Heroku CLI
      - name: Setup Heroku CLI
        uses: akhileshns/heroku-deploy@v3.12.13
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          justlogin: true
      
      # Установка Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # Логин в Heroku Container Registry
      - name: Login to Heroku Container Registry
        run: heroku container:login
      
      # Сборка и пуш контейнера бэкенда
      - name: Build and push backend
        working-directory: ./server
        run: |
          heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}-api
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}-api
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      
      # Настройка переменных окружения для бэкенда
      - name: Set backend environment variables
        run: |
          heroku config:set NODE_ENV=production --app ${{ secrets.HEROKU_APP_NAME }}-api
          heroku config:set JWT_SECRET=${{ secrets.JWT_SECRET }} --app ${{ secrets.HEROKU_APP_NAME }}-api
          heroku config:set CLIENT_URL=https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com --app ${{ secrets.HEROKU_APP_NAME }}-api
      
      # Настройка Node.js для фронтенда
      - name: Setup Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      # Сборка фронтенда
      - name: Build frontend
        working-directory: ./client
        run: |
          npm ci
          npm run build
        env:
          VITE_API_URL: https://${{ secrets.HEROKU_APP_NAME }}-api.herokuapp.com
      
      # Деплой фронтенда на Heroku static buildpack
      - name: Deploy frontend
        uses: akhileshns/heroku-deploy@v3.12.13
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "client"
          buildpack: "https://github.com/heroku/heroku-buildpack-static.git"

  # Опционально: Альтернативный деплой на Vercel
  deploy-vercel:
    name: Deploy to Vercel (Frontend)
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Настройка Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      # Установка зависимостей и сборка
      - name: Install and build
        working-directory: ./client
        run: |
          npm ci
          npm run build
        env:
          VITE_API_URL: ${{ secrets.VERCEL_API_URL }}
      
      # Деплой на Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client/dist
          vercel-args: '--prod' 